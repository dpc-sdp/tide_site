<?php

/**
 * @file
 * Tide Site Simple Sitemap functions.
 */

use Drupal\simple_sitemap\Entity\SimpleSitemap;
use Drupal\simple_sitemap\Entity\SimpleSitemapInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function tide_site_simple_sitemap_taxonomy_term_delete($term) {
  // Remove the sitemap of the deleted site termÂ¡.
  try {
    /** @var \Drupal\taxonomy\TermInterface $term */
    if ($term->bundle() == 'sites') {
      $sitemap_id = 'site-' . $term->id();
      $sitemap = SimpleSitemap::load($sitemap_id);
      $sitemap_storage = \Drupal::entityTypeManager()->getStorage('simple_sitemap');
      if ($sitemap instanceof SimpleSitemapInterface) {
        $sitemap_storage->deleteContent($sitemap);
        $sitemap_storage->load($sitemap_id)->delete();
      }
    }
  }
  catch (Exception $exception) {
    watchdog_exception('tide_site_simple_sitemap', $exception);
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function tide_site_simple_sitemap_simple_sitemap_insert(SimpleSitemap $entity) {
  $sitemap_id = $entity->id();
  if ($term_id = _tide_site_simple_sitemap_extract_site_number($sitemap_id)) {

    if(Term::load($term_id) && $entity->getType()->getOriginalId() === 'tide_default_sitemap_type') {
      /** @var Drupal\simple_sitemap\Manager\Generator $custom_generator */
      $custom_generator = \Drupal::service('simple_sitemap.generator');
      $custom_generator->setSitemaps($entity->id());
      $site_based_custom_link = $custom_generator->customLinkManager()->get('/');

      if (isset($site_based_custom_link[$sitemap_id]) && empty($site_based_custom_link[$sitemap_id])) {
        $custom_generator->customLinkManager()->add(
          '/',
          ["path" => "/", "priority" => "1.0", "changefreq" => "daily"]
        );
      }
    }
  }
}

/**
 * Extract site number from the sitemap id.
 */
function _tide_site_simple_sitemap_extract_site_number($string) {
  if (preg_match('/^site-(\d+)$/', $string, $matches)) {
    return $matches[1];
  }
  return NULL;
}
